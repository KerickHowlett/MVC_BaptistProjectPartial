@model MVC_DATABASE.Models.ViewModels.NegIndex

@using MVC_DATABASE.Models;

@{
    ViewBag.Title = "Edit";
}

<h2>Negotiation Platform</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>NEGOTIATION</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.negotiation.NEGID)

        <div class="form-group">
            @Html.LabelFor(model => model.negotiation.RFPID, "RFPID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.negotiation.RFPID, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.negotiation.AspNetUser.VENDOR.ORGANIZATION, "Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.negotiation.AspNetUser.VENDOR.ORGANIZATION, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>

        <table id="rfiresponsetable" class="table tablesorter">
            <thead>
                <tr>
                    <th>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.response.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.response.PATH)
                    </th>

                </tr>
            </thead>
            <tbody>
                @if (Model.responselist != null)
                {
                    
                    int count = 1;
                    string owner;
                    string path;
                    foreach (var item in Model.responselist)
                    {
                        path = item.PATH;
                        VENDOR ven = item.AspNetUser.VENDOR;
                        if (ven.ORGANIZATION == null)
                        {
                            owner = "Baptist Health";
                        }
                        else
                        {
                            owner = ven.ORGANIZATION;
                        }
                        <tr>
                            <td>
                                @count
                                @count++
                            </td>
                            <td>
                                @owner
                            </td>
                            <td>
                                @Html.ActionLink(String.Format(item.PK + owner), "DownloadResponse", new { path = item.PATH })
                            </td>
                        </tr>


                    }
                }
            </tbody>

        </table>

        <div class="form-group">
            @Html.LabelFor(m => m.response.PATH, "Path")
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.file, null, new { type = "file", @class = "input-file" })
            </div>
        </div>

@if (User.IsInRole("Employee") || User.IsInRole("Administrator"))
{ 
        <div class="form-group">
            @Html.LabelFor(model => model.negotiation.CLOSED, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.negotiation.CLOSED)
                    @Html.ValidationMessageFor(model => model.negotiation.CLOSED, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
}
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
